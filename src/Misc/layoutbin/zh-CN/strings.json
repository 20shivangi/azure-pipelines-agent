{
    "AcceptTeeEula":  "(Y/N) Accept the Team Explorer Everywhere license agreement now?",
    "AccessDenied":  "访问被拒绝",
    "AccessDeniedSettingRecoveryOption":  "Access Denied while setting service recovery options.",
    "AddAgentFailed":  "未能添加代理。请重试或按 Ctrl-C 退出",
    "AddBuildTag":  "添加版本标记",
    "AgentAddedSuccessfully":  "已成功添加代理",
    "AgentExit":  "Agent will exit shortly for update.",
    "AgentIsNotConfigured":  "未配置代理。",
    "AgentMachinePoolNameLabel":  "代理池",
    "AgentName":  "代理名称",
    "AgentReplaced":  "已成功替换代理",
    "AgentRunningBehindProxy":  "Agent is running behind proxy server: \u0027{0}\u0027",
    "AgentVersion":  "Current agent version: \u0027{0}\u0027",
    "AgentWithSameNameAlreadyExistInPool":  "Pool {0} already contains an agent with name {1}.",
    "AlreadyConfiguredError":  "Cannot configure the agent because it is already configured. To reconfigure the agent, run \u0027config.cmd remove\u0027 or \u0027./config.sh remove\u0027 first.",
    "ArgumentNeeded":  "必须指定“{0}”。",
    "ArtifactCommandNotFound":  "##vso[artifact.{0}] 不属于已识别的项目命令扩展的命令。请参阅参考文档(http://go.microsoft.com/fwlink/?LinkId=817296)",
    "ArtifactDownloadFailed":  "Failed to download the artifact from {0}.",
    "ArtifactLocationNotSupport":  "不支持项目位置: {0}",
    "ArtifactLocationRequired":  "项目位置必填。",
    "ArtifactNameRequired":  "项目名称必填。",
    "ArtifactTypeRequired":  "项目类型必填。",
    "AssociateArtifact":  "关联项目",
    "AssociateArtifactWithBuild":  "已将项目 {0} 与生成 {1} 关联",
    "AttachFileNotExist":  "无法附加(类型:{0} 名称:{1})文件: {2}。文件不存在。",
    "AttachmentExceededMaximum":  "正在跳过附件，因为它超出了允许的最大大小: {0}",
    "AttemptRemoveCredFromConfig":  "An unsuccessful attempt was made using git command line to remove \"http.extraheader\" from the git config. Attempting to modify the git config file directly to remove the credential.",
    "AuthenticationType":  "身份验证类型",
    "BuildCommandNotFound":  "##vso[build.{0}] 不属于已识别的生成命令扩展的命令。请参阅参考文档(http://go.microsoft.com/fwlink/?LinkId=817296)",
    "BuildNumberRequired":  "版本编号必填。",
    "BuildTagAddFailed":  "未成功添加版本标记“{0}”。",
    "BuildTagRequired":  "版本标记必填。",
    "BuildTagsForBuild":  "现在，版本“{0}”拥有下列标记: {1}",
    "CannotChangeParentTimelineRecord":  "无法更改现有时间线记录的父时间线记录。",
    "CannotFindHostName":  "Cannot find VSTS account name from server url: \u0027{0}\u0027",
    "CanNotFindService":  "找不到服务 {0}",
    "CanNotGrantPermission":  "无法将 LogonAsService 权限授予用户 {0}",
    "CanNotStartService":  "无法启动该服务。请查看日志以获取更多详细信息。",
    "CanNotStopService":  "Cannot stop the service {0} in a timely fashion.",
    "CannotUploadFile":  "无法加载文件，因为未指定文件位置。",
    "CannotUploadSummary":  "无法加载摘要文件，因为未指定摘要文件位置。",
    "CanNotVerifyLogonAccountPassword":  "无法验证输入的密码是否有效。",
    "ClassDirectoriesNotSpecifiedForMultiModule":  "未指定类目录字段。对于多模块项目，类文件目录字段必填，以生成代码覆盖率报告。",
    "Cleanup":  "发布作业清理",
    "ClockSkewStopRetry":  "Stopped retrying OAuth token request exception after {0} seconds.",
    "CodeCoverageBuildFileIsEmpty":  "未能启用代码覆盖率，因为提供的生成文件“{0}”为空。请提供有效的生成文件并重试。",
    "CodeCoverageCommandNotFound":  "##vso[codecoverage.{0}] 不属于已识别的任务命令扩展的命令。请参阅参考文档(http://go.microsoft.com/fwlink/?LinkId=817296)",
    "CodeCoverageDataIsNull":  "未找到覆盖率数据。有关详细信息，请查看生成错误/警告。",
    "CodeCoverageEnabled":  "已成功启用“{1}”的“{0}”代码覆盖率",
    "CodeCoveragePublishIsValidOnlyForBuild":  "发布代码覆盖率仅适用于“生成”。",
    "CommandKeywordDetected":  "“{0}”包含日志记录命令关键字“##vso”，但它不是合法的命令。请参阅文档以修复任何可能的语法错误(http://go.microsoft.com/fwlink/?LinkId=817296)",
    "CommandNotFound":  "找不到 ##vso[{0}.command] 的命令扩展。请参阅文档(http://go.microsoft.com/fwlink/?LinkId=817296)",
    "CommandProcessFailed":  "无法成功处理命令“{0}”。请参阅文档(http://go.microsoft.com/fwlink/?LinkId=817296)",
    "ConnectingToServer":  "正在连接到服务器...",
    "ConnectSectionHeader":  "连接",
    "ConnectToServer":  "Connecting to the server.",
    "CouldNotRemoveService":  "无法删除服务“{0}”",
    "CustomLogDoesNotExist":  "未提供日志文件路径或文件不存在:“{0}”",
    "CustomMarkDownSummaryDoesNotExist":  "未提供标记摘要文件路径或文件不存在:“{0}”",
    "Deleting":  "正在删除: {0}",
    "DeletingCredentials":  "正在删除 .credentials",
    "DeletingSettings":  "正在删除 .agent",
    "DirectoryHierarchyUnauthorized":  "Permission to read the directory contents is required for \u0027{0}\u0027 and each directory up the hierarchy. {1}",
    "DirectoryIsEmptyForArtifact":  "目录“{0}”为空。没有要添加到生成项目“{1}”的内容。",
    "DirectoryNotFound":  "找不到目录:“{0}”",
    "DownloadAgent":  "Downloading latest agent.",
    "DownloadArtifacts":  "下载项目",
    "DownloadArtifactsFailed":  "下载项目失败: {0}",
    "DownloadingTask0":  "Downloading task: {0}",
    "EnsureJobFinished":  "Waiting for current job finish running.",
    "EnterValidValueFor0":  "输入 {0} 的一个有效值。",
    "ErrorOccurred":  "An error occurred: {0}",
    "ErrorOccurredWhilePublishingCCFiles":  "Error occurred while publishing code coverage files. Error: {0}",
    "EulasSectionHeader":  "最终用户许可协议",
    "Failed":  "失败: ",
    "FailedDeletingTempDirectory0Message1":  "删除临时目录“{0}”失败。{1}",
    "FailedToConnect":  "连接失败。请重试或按 Ctrl-C 退出",
    "FailedToDeleteTempScript":  "删除临时内联脚本文件“{0}”失败。{1}",
    "FailedToFindPool":  "未能找到池名称。请重试或按 Ctrl-C 退出",
    "FailedToLockServiceDB":  "Failed to Lock Service Database for Write",
    "FailedToOpenSCM":  "未能打开服务控制管理器",
    "FailedToOpenSCManager":  "未能打开服务控制管理器",
    "FailedToPublishTestResults":  "未能发布测试结果: {0}",
    "FailedToReadFile":  "读取 {0} 失败。错误: {1}。",
    "FailedToReplaceAgent":  "替换代理失败。请重试或按 Ctrl-C 退出",
    "FailToRemoveCredFromConfig":  "Unable to remove \"http.extraheader\" from the git config. To remove the credential, execute \"git config --unset-all {0}\" from the repository root \"{1}\".",
    "FileContainerUploadFailed":  "无法将文件复制到服务器 StatusCode={0}: {1}。源文件路径: {2}。目标服务器路径: {3}",
    "FileDoesNotExist":  "文件“{0}”不存在或不可访问。",
    "FileNotFound":  "找不到文件:“{0}”",
    "FileUploadCancelled":  "File upload has been cancelled during upload file: \u0027{0}\u0027.",
    "FileUploadDetailTrace":  "Detail upload trace for file that fail to upload: {0}",
    "FileUploadFailed":  "Fail to upload \u0027{0}\u0027 due to \u0027{1}\u0027.",
    "FileUploadFailedAfterRetry":  "File upload failed even after retry.",
    "FileUploadFailedRetryLater":  "{0} files failed to upload, retry these files after a minute.",
    "FileUploadFinish":  "File: \u0027{0}\u0027 took {1} milliseconds to finish upload",
    "FileUploadProgress":  "Total file: {0} ---- Processed file: {1} ({2}%)",
    "FileUploadProgressDetail":  "Uploading \u0027{0}\u0027 ({1}%)",
    "FileUploadRetry":  "Start retry {0} failed files upload.",
    "FileUploadRetryInSecond":  "Retry file upload after {0} seconds.",
    "FileUploadRetrySucceed":  "File upload succeed after retry.",
    "FileUploadSucceed":  "File upload succeed.",
    "GenerateAndRunUpdateScript":  "Generate and execute update script.",
    "GetSources":  "获取资源",
    "GroupDoesNotExists":  "组: {0} 不存在",
    "InvalidBuildOrCoverageTool":  "发生内部错误。详情: 提供的生成或代码覆盖率工具无效。生成工具 =“{0}”。覆盖率工具 =“{1}”。 ",
    "InvalidBuildXml":  "无效的生成 xml“{0}”。分析文件时发生错误“{1}”。请确保提供的文件格式正确并重试。",
    "InvalidClassFilesDirectory":  "“类文件目录”字段的输入无效。它不应该为正则表达式或文件路径。“类文件目录”接受以逗号分隔的类目录列表。",
    "InvalidClassFilter":  "类包含/排除筛选器“{0}”无效。请提供有效的筛选器并重试。示例: +:com.*,+:org.*",
    "InvalidCommandArg":  "命令参数“{0}”包含一个或多个以下无效字符: \"、\\r、\\n",
    "InvalidCommandResult":  "Command doesn\u0027t have valid result value.",
    "InvalidCompletedDate":  "Duration of each test run will be used for time calculation as, Maximum Completed Date {0} obtained from test results file is greater than Minimum Start Date {1}",
    "InvalidConfigFor0TerminatingUnattended":  "为 {0} 提供的配置无效。正在终止无人参与的配置。",
    "InvalidDateFormat":  "Duration of each test run will be used for time calculation as, invalid date format obtained from results file: {0} (Start Date: {1}, Completed Date: {2}",
    "InvalidGroupName":  "无效的组名称 - {0}",
    "InvalidMember":  "无法将新成员添加到本地组，因为该成员的帐户类型有误。如果你是在域控制器中进行配置，则无法将内置计算机帐户添加到本地组。必须改用域用户帐户",
    "InvalidResultFiles":  "无效的结果文件。请确保文件“{0}”的结果格式匹配“{1}”测试结果格式。",
    "InvalidSourceDirectory":  "无法获取资源目录。有关详细信息，请联系你的管理员。",
    "InvalidValueInXml":  "无法检索摘要文件“{1}”中“{0}”的值。请验证确认摘要文件的格式是否正确并重试。",
    "InvalidWindowsCredential":  "输入的窗口凭据无效。请重试或按 Ctrl-C 退出",
    "IsMultiModuleParameterNotAvailable":  "参数 IsMultiModule 不可用。请将该项目视为单一模块项目。",
    "JobCompleted":  "{0:u}: 作业 {1} 已完成，结果为: {2}",
    "ListenerHelp":  [
                         "Visual Studio Team Services Agent",
                         "Copyright (c) Microsoft Corporation",
                         "",
                         "Run the agent using the convenience cmd or shell script wrappers.",
                         "",
                         "Print agent version information:",
                         "Win  : .\\config.cmd --version and config.cmd --commit",
                         "Unix : ./config.sh --version and ./config.sh --commit",
                         "",
                         "Display command line help:",
                         "Win  : .\\config.cmd --help",
                         "Unix : ./config.sh --help",
                         "",
                         "Configure the agent and exit:",
                         "Win  : .\\config.cmd [arguments] [options]",
                         "Unix : ./config.sh [arguments] [options]",
                         "",
                         "Unconfigure the agent:",
                         "Win  : .\\config.cmd remove",
                         "Unix : ./config.sh remove",
                         "",
                         "Run agent interactively (must be configured):",
                         "Win  : .\\run.cmd [arguments] [options]",
                         "Unix : ./run.sh [arguments] [options]",
                         "",
                         "",
                         "Configure Arguments:",
                         "-----------------------------------------------------------------------------",
                         "--url                  URL of the server.  Examples:",
                         "                       https://myaccount.visualstudio.com or http://onprem:8080/tfs",
                         "--auth                 Authentication type. Valid options are PAT (Personal Access Token),",
                         "                       Negotiate (Kerberos or NTLM) and Integrated (Windows default credentials)",
                         "--pool                 Pool name for agent to join",
                         "--agent                Agent name",
                         "--work                 Work directory where job data is stored.",
                         "                       Defaults to _work under the root of the agent directory.",
                         "                       Work directory is owned by a given agent and should not share between multiple agents.",
                         "--windowslogonaccount  Windows logon account name if runasservice option is chosen (Only on Windows)",
                         "--windowslogonpassword Windows logon account password if runasservice option is chosen (Only on Windows)",
                         "",
                         "",
                         "Remove Arguments:",
                         "-----------------------------------------------------------------------------",
                         "--auth                 Authentication type. Valid options are PAT (Personal Access Token),",
                         "                       Negotiate (Kerberos or NTLM) and Integrated (Windows default credentials)",
                         "",
                         "",
                         "Options:",
                         "-----------------------------------------------------------------------------",
                         "--unattended     Unattended config. You will not be prompted.",
                         "                 All answers must be supplied to the command line.",
                         "--acceptteeeula  Accept TEE end user license agreement. (Only on Linux and OSX)",
                         "--replace        Replace the agent in a pool. If another agent is listening",
                         "                 by that name, or it will start failing with a conflict.",
                         "--runasservice   Configure the agent as service. (Only on Windows, need administrator permission to configure windows service)",
                         "",
                         "",
                         "Arguments by Auth Type:",
                         "-----------------------------------------------------------------------------",
                         "PAT:",
                         "--token        Personal Access Token data. Best to paste value in.",
                         "",
                         "Negotiate:",
                         "--username     domain\\username or UPN",
                         "--password     windows account password",
                         "",
                         "Integrated: does not take any additional arguments",
                         "",
                         "",
                         "Unattended configure and unconfigure examples:",
                         "-----------------------------------------------------------------------------",
                         "Remember to check return code when using unattended configuration",
                         "Unattend configuration for VSTS with PAT authentication",
                         "Win  : .\\config.cmd --unattended --url https://myaccount.visualstudio.com --auth PAT --token \u003ctoken\u003e --pool default --agent myagent",
                         "Unix : ./config.sh --unattended --acceptteeeula --url https://myaccount.visualstudio.com --auth PAT --token \u003ctoken\u003e --pool default --agent myagent",
                         "",
                         "Unattend configuration for on-premise TFS with integrated (windows) and (Linux/OSX) negotiate authentication",
                         "Win  : .\\config.cmd --unattended --url http://mylocaltfsserver:8080/tfs --auth Integrated --pool default --agent myagent",
                         "Unix : ./config.sh --unattended --acceptteeeula --url http://mylocaltfsserver:8080/tfs --auth Negotiate --username DOMAIN\\USER_NAME --password MyPassword --pool default --agent myagent",
                         "",
                         "Unattend configuration for VSTS with PAT authentication and replace existing agent with same agent name",
                         "Win  : .\\config.cmd --unattended --url https://myaccount.visualstudio.com --auth PAT --token \u003ctoken\u003e --pool default --agent myagent --replace",
                         "Unix : ./config.sh --unattended --acceptteeeula --url https://myaccount.visualstudio.com --auth PAT --token \u003ctoken\u003e --pool default --agent myagent --replace",
                         "",
                         "Unattend configuration for VSTS with PAT authentication and specify agent work directory",
                         "Win  : .\\config.cmd --unattended --url https://myaccount.visualstudio.com --auth PAT --token \u003ctoken\u003e --pool default --agent myagent --work D:\\agent_work",
                         "Unix : ./config.sh --unattended --acceptteeeula --url https://myaccount.visualstudio.com --auth PAT --token \u003ctoken\u003e --pool default --agent myagent --work usr/local/agent_work",
                         "",
                         "Unattend configuration for on-premise TFS with integrated authentication and configure agent as Windows service run as NetworkService",
                         "Win  : .\\config.cmd --unattended --url http://mylocaltfsserver:8080/tfs --auth Integrated --pool default --agent myagent --runasservice",
                         "",
                         "Unattend configuration for on-premise TFS with integrated authentication and configure agent as Windows service run as a domain account",
                         "Win  : .\\config.cmd --unattended --url http://mylocaltfsserver:8080/tfs --auth Integrated --pool default --agent myagent --runasservice --windowslogonaccount DOMAIN\\USER_NAME --windowslogonpassword MyPassword",
                         "",
                         "Unattend unconfiguration for VSTS with PAT authentication",
                         "Win  : .\\config.cmd remove --unattended --auth PAT --token \u003ctoken\u003e",
                         "Unix : ./config.sh remove --unattended --auth PAT --token \u003ctoken\u003e",
                         "",
                         "Unattend unconfiguration for on-premise TFS with integrated (windows) and (Linux/OSX) negotiate authentication",
                         "Win  : .\\config.cmd remove --unattended --auth Integrated",
                         "Unix : ./config.sh remove --unattended --auth Negotiate --username DOMAIN\\USER_NAME --password MyPassword",
                         ""
                     ],
    "ListenForJobs":  "{0:u}: 侦听作业",
    "LocalClockSkewed":  "The local machine\u0027s clock may be out of sync with the server time by more than five minutes. Please sync your clock with your domain or internet time and try again.",
    "MemberDoesNotExists":  "成员: {0} 不存在",
    "MinimumNetFramework":  ".NET Framework x64 4.5 or higher is required.",
    "MinRequiredGitVersion":  "Min required git version is \u0027{0}\u0027, your git (\u0027{1}\u0027) version is \u0027{2}\u0027",
    "MissingAgent":  "该代理不再存在于服务器上。请重新配置该代理。",
    "MissingAttachmentFile":  "无法上传任务附件文件，未指定附件文件位置或附件文件不在磁盘上",
    "MissingAttachmentName":  "无法添加任务附件，未提供附件名称。",
    "MissingAttachmentType":  "无法添加任务附件，未提供附件类型。",
    "MissingConfig":  "无法连接到服务器，因为缺少配置文件。正在跳过从服务器中删除代理。",
    "MissingTimelineRecordId":  "无法更新时间线记录，未提供时间线记录 ID。",
    "ModifyingCoberturaIndexFile":  "Modifying Cobertura Index file",
    "N":  "N",
    "NameRequiredForTimelineRecord":  "需提供此新时间线记录的名称。",
    "NeedAdminForConfigAgentWinService":  "Needs Administrator privileges for configuring agent as windows service.",
    "NetworkServiceNotFound":  "找不到网络服务帐户",
    "NoArtifactsFound":  "No artifacts are available in the version \u0027{0}\u0027. Make sure that an artifact is published with the version and try again.",
    "NoSpaceOnDisk":  "正在跳过附件，因为它超出了允许的最大大小或在磁盘上不可用: {0}",
    "NotLinux":  "此代理版本适用于 Linux。请为你的操作系统安装正确的版本。",
    "NotOSX":  "此代理版本适用于 OSX。请为你的操作系统安装正确的版本。",
    "NotWindows":  "此代理版本适用于 Windows。请为你的操作系统安装正确的版本。",
    "OperationFailed":  "错误: 操作 {0} 失败，返回代码为 {1}",
    "ParentTimelineNotCreated":  "尚未为此新的时间线记录创建父时间线记录。",
    "Password":  "密码",
    "PathNotExist":  "路径不存在: {0}",
    "PersonalAccessToken":  "个人访问令牌",
    "PlatformNotSupport":  "不支持在此平台运行该代理。当前平台为 {0}，适用于 {1}。",
    "PowerShellNotInstalledMinVersion0":  "未安装 PowerShell。要求的最低版本: {0}",
    "PrepareTaskExecutionHandler":  "Preparing task execution handler.",
    "Prepending0WithDirectoryContaining1":  "Prepending {0} environment variable with directory containing \u0027{1}\u0027.",
    "ProcessCompletedWithCode0Errors1":  "进程已完成，退出代码为 {0}，并且有 {1} 个错误写入了错误流。",
    "ProcessCompletedWithExitCode0":  "进程已完成，退出代码为 {0}。",
    "ProcessExitCode":  "从进程返回了退出代码 {0}: 文件名称“{1}”，参数“{2}”。",
    "Prompt0":  "输入 {0}",
    "Prompt0Default1":  "输入 {0} (对于 {1} 按 Enter)",
    "PSScriptError":  "PowerShell 脚本已完成，收到 {0} 个错误。",
    "PublishCodeCoverage":  "发布代码覆盖率",
    "PublishedCodeCoverageArtifact":  "已将“{0}”发布为项目“{1}”",
    "PublishingCodeCoverage":  "正在将覆盖率摘要数据发布到 TFS 服务器。",
    "PublishingCodeCoverageFiles":  "正在将代码覆盖率文件发布到 TFS 服务器。",
    "PublishingTestResults":  "正在向测试运行“{0}”发布测试结果",
    "PublishTestResults":  "发布测试结果",
    "QueryingWorkspaceInfo":  "Querying workspace information.",
    "QueueConError":  "{0:u}: 代理连接错误: {1}。 每隔 {2} 秒重试，直到重新连接为止。",
    "QueueConnected":  "{0:u}: 已重新连接代理。",
    "ReadingCodeCoverageSummary":  "正在读取“{0}”中的代码覆盖率摘要",
    "RegisterAgentSectionHeader":  "注册代理",
    "RenameIndexFileCoberturaFailed":  "Renaming \u0027{0}\u0027 to \u0027{1}\u0027 failed while publishing code coverage files for \u0027{2}\u0027. Inner Exception: \u0027{3}\u0027",
    "Replace":  "替换? (是/否)",
    "ResultsCommandNotFound":  "##vso[results.{0}] 不属于任务命令扩展的识别命令。TODO: DOC aka 链接",
    "RMArtifactContainerDetailsInvaidError":  "The artifact does not have valid container details: {0}",
    "RMArtifactContainerDetailsNotFoundError":  "The artifact does not contain container details: {0}",
    "RMArtifactDetailsIncomplete":  "找不到下载项目所需的信息",
    "RMArtifactDirectoryNotFoundError":  "项目目录不存在: {0}",
    "RMArtifactDownloadBegin":  "正在下载类型为 {1} 的链接的项目 {0}...",
    "RMArtifactDownloadFinished":  "已下载链接的项目 {0}",
    "RMArtifactDownloadRequestCreationFailed":  "Failed to create request to download artifact from URL: {0}",
    "RMArtifactEmpty":  "Artifact does not contain any files to download.",
    "RMArtifactFolderCreated":  "已创建项目文件夹 {0}",
    "RMArtifactMatchNotFound":  "生成项目“{0}”不匹配任何命名模式，正在跳过下载",
    "RMArtifactNameDirectoryNotFound":  "目录“{0}”不存在。正在回退到父目录: {1}",
    "RMArtifactsDownloadFinished":  "已完成项目下载",
    "RMArtifactTypeNotSupported":  "发布管理不支持当前版本中项目类型 {0} 的下载",
    "RMArtifactVersionNotBelongToArtifactSource":  "The artifact version with ID {0} does not belong to the linked artifact source with ID {1}.",
    "RMCachingAllItems":  "Caching all items in the file container...",
    "RMCachingComplete":  "Caching complete. ({0} ms)",
    "RMCachingContainerItems":  "Caching items under \u0027{0}\u0027 in the file container...",
    "RMCleanedUpArtifactsDirectory":  "已清理项目目录: {0}",
    "RMCleaningArtifactsDirectory":  "正在清除项目目录: {0}",
    "RMContainerItemNotSupported":  "Container Item type \u0027{0}\u0027 not supported.",
    "RMContainerItemPathDoesnotExist":  "File container item path doesn\u0027t start with {0}: {1}",
    "RMContainerItemRequestTimedOut":  "Request timed out after {0} seconds; sleeping for {1} seconds and attempting again. Request: {2} {3}",
    "RMCopyingFile":  "[File] {0} =\u003e {1}",
    "RMCustomEndpointNotFound":  "Cannot find required information in the job to download the Custom artifact: {0}",
    "RMDownloadArtifactUnexpectedError":  "下载项目时发生意外错误",
    "RMDownloadComplete":  "下载完毕。",
    "RMDownloadingArtifactFromFileShare":  "正在从文件共享下载项目: {0}",
    "RMDownloadingJenkinsArtifacts":  "正在从 Jenkins 服务器下载项目",
    "RMDownloadProgress":  "{0} placed file(s): {1} downloaded, {2} empty",
    "RMDownloadProgressDetails":  "{0} MB downloaded at {1} KB/sec. Download time: {2}. Parallel download limit: {3}.",
    "RMDownloadTaskCompletedStatus":  "No download tasks have completed in {0} minutes. Remaining task statuses:",
    "RMDownloadTaskStates":  " {0}: \t{1} task(s).",
    "RMEnvironmentVariablesAvailable":  "以下是可用的环境变量。请注意，可以在任务(在 ReleaseDefinition 中)中通过将“_”替换为“.”引用这些环境变量，如: 可以在 ReleaseDefinition 中使用 Agent.Name 引用 AGENT_NAME 环境变量: {0}",
    "RMErrorDownloadingContainerItem":  "Error downloading {0}: {1}",
    "RMErrorDuringArtifactDownload":  "下载期间发生错误: {0}",
    "RMGetFileAsyncTimedOut":  "FetchEngine.GetFileAsync task timed out after {0} minute(s).",
    "RMGitEndpointNotFound":  "Cannot find required information in the job to download the Team Foundation Git artifact.",
    "RMGitHubEndpointNotFound":  "作业中找不到下载 GitHub 项目所需的信息: {0}",
    "RMGotJenkinsArtifactDetails":  "收到 Jenkins 项目详细信息",
    "RMJenkinsBuildId":  "BuildId: {0}",
    "RMJenkinsEndpointNotFound":  "作业中找不到下载 Jenkins 项目所需的信息: {0}",
    "RMJenkinsJobName":  "作业名称: {0}",
    "RMNoArtifactsFound":  "找不到相对路径为:“{0}” 的项目",
    "RMNoBuildArtifactsFound":  "生成 {0} 中无可用项目。请确保该生成正在发布项目并重试",
    "RMPrepareToGetFromJenkinsServer":  "正在准备从 Jenkins 服务器获取项目信息",
    "RMPreparingToDownload":  "正在准备下载项目: {0}",
    "RMPreparingToGetBuildArtifactList":  "正在准备从生成中获取可用项目列表",
    "RMReAttemptingDownloadOfContainerItem":  "Re-attempting download of {0}. Error: {1}",
    "RMReceivedGithubArtifactDetails":  "收到 GitHub 项目详细信息",
    "RMRemainingDownloads":  "{0} downloads remaining.",
    "RMRetryingArtifactDownload":  "正在重新尝试下载...",
    "RMStartArtifactsDownload":  "开始项目下载...",
    "RMStreamTypeNotSupported":  "Release management does not support download of stream type {0} in the current version",
    "RMTfsVCEndpointNotFound":  "Cannot find required information in the job to download the Team Foundation Version Control artifact.",
    "RMUserChoseToSkipArtifactDownload":  "将根据指定设置跳过项目下载。",
    "RSAKeyFileNotFound":  "未找到 RSA 密钥文件 {0}",
    "RunAgentAsServiceDescription":  "是否将代理作为服务运行? (是/否)",
    "RunningJob":  "{0:u}: 运行作业: {1}",
    "SavedSettings":  "{0:u}: 设置已保存。",
    "ScanToolCapabilities":  "Scanning for tool capabilities.",
    "SelfManageGitCreds":  "You are in self manage git creds mode. Make sure your agent host machine can bypass any git authentication challenge.",
    "ServerTarpit":  "The job is currently being throttled by the server. You may experience delays in console line output, job status reporting, and task log uploads.",
    "ServerUrl":  "服务器 URL",
    "ServiceAlreadyExists":  "The service already exists: {0}, it will be replaced",
    "ServiceConfigured":  "已成功配置服务 {0}",
    "ServiceInstalled":  "Service {0} successfully installed",
    "ServiceRecoveryOptionSet":  "Service {0} successfully set recovery option",
    "ServiceStartedSuccessfully":  "已成功启动服务 {0}",
    "SessionCreateFailed":  "未能创建会话。{0}",
    "SessionExist":  "已存在此代理的会话。",
    "SessionExistStopRetry":  "重试 {0} 秒后，出现 SessionConflictException 时停止重试。",
    "ShouldBeAdmin":  "访问被拒绝。请确保以管理员身份运行该命令。",
    "Skipping":  "不存在。正在跳过 ",
    "SourceArtifactProviderNotFound":  "Can not find source provider for artifact of type {0}",
    "SourceDirectoriesNotSpecified":  "未指定源目录字段。请指定有效的代码覆盖率报告的源目录，以将突出显示的源代码包括在内并重试。",
    "SourceDirectoriesNotSpecifiedForMultiModule":  "未指定源目录字段。对于代码覆盖率报告的多模块项目而言，源目录是必需的，以将突出显示的源代码包括在内。",
    "StepTimedOut":  "任务已超时。",
    "Success":  "已成功: ",
    "SupportedRepositoryEndpointNotFound":  "无法将任何源存储库终结点与任何支持的源提供程序进行匹配。",
    "SupportedTaskHandlerNotFound":  "Supported task execution handler not found. Supported handlers: {0}",
    "SvnBranchCheckedOut":  "修订 {2} 时，已查看存储库 {1} 的分支 {0}",
    "SvnEmptyServerPath":  "空相对服务器路径已映射到“{0}”。",
    "SvnFileAlreadyExists":  "文件“{0}”已经存在",
    "SvnIncorrectRelativePath":  "指定的相对路径“{0}”不正确。",
    "SvnMappingDuplicateLocal":  "正在忽略本地路径={0}的复制映射",
    "SvnMappingDuplicateServer":  "正在忽略服务器路径={0}的复制映射",
    "SvnMappingIgnored":  "已忽略整个映射集。使用完整分支映射继续操作。",
    "SvnNotInstalled":  "找不到已安装的 svn 命令行实用工具",
    "SvnSyncingRepo":  "正在同步存储库: {0} (Svn)",
    "TaskCommandNotFound":  "##vso[task.{0}] 不是任务命令扩展的识别命令。请参阅参考文档(http://go.microsoft.com/fwlink/?LinkId=817296)",
    "TeeEula":  [
                    "从 TFVC 存储库生成源要求接受 Team Explorer Everywhere 最终用户许可协议。本步骤不是从 Git 存储库生成源所必需的。",
                    "",
                    "可在以下位置找到 Team Explorer Everywhere 许可协议的副本:",
                    "  {0}"
                ],
    "TestAgentConnection":  "Testing agent connection.",
    "TestResultsRemaining":  "剩余测试结果: {0}。测试运行 ID: {1}",
    "TotalThrottlingDelay":  "The job has experienced {0} seconds total delay caused by server throttling.",
    "TotalUploadFiles":  "Uploading {0} files",
    "TypeRequiredForTimelineRecord":  "需提供此新时间线记录的类型。",
    "UnableResolveArtifactType":  "无法从后列项目位置推导出项目类型: {0}。",
    "UnableToArchiveResults":  "无法存档测试结果: {0}",
    "UnableToParseBuildTrackingConfig0":  "无法分析旧的生成跟踪配置。将另外新建生成目录。之前的目录可能处于未声明状态。旧的配置内容: {0}",
    "UnconfigureOSXService":  "Unconfigure service first according to https://www.visualstudio.com/en-us/docs/build/admin/agents/v2-osx",
    "UnconfigureServiceDService":  "Unconfigure service first according to https://www.visualstudio.com/en-us/docs/build/admin/agents/v2-linux",
    "UninstallingService":  "正在删除服务",
    "UnknownCodeCoverageTool":  "不支持代码覆盖率工具“{0}”。",
    "UnregisteringAgent":  "正在从服务器删除代理",
    "UpdateBuildNumber":  "更新版本号",
    "UpdateBuildNumberForBuild":  "将版本 {1} 的版本号更新到 {0}",
    "UpdateInProgress":  "Agent update in progress, do not shutdown agent.",
    "UpgradeToLatestGit":  "In order to get better Git experience, upgrade your Git to at least version \u0027{0}\u0027, your current git version is \u0027{1}\u0027.",
    "UploadArtifact":  "上传项目",
    "UploadToFileContainer":  "将“{0}”上传到文件容器:“{1}”",
    "UserName":  "用户名",
    "Variable0ContainsCyclicalReference":  "无法展开变量“{0}”。检测到循环引用。",
    "Variable0ExceedsMaxDepth1":  "无法展开变量“{0}”。已超出最大展开深度({1})。",
    "VSTSHostNonZeroReturn":  "LegacyVSTSPowerShellHost.exe 已完成，返回代码为: {0}。",
    "WaitForServiceToStop":  "正在等待服务停止...",
    "WindowsLogonAccountNameDescription":  "要用于服务的用户帐户",
    "WindowsLogonPasswordDescription":  "帐户 {0} 的密码",
    "WorkFolderDescription":  "工作文件夹",
    "Y":  "Y"
}
